generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id                    Int                   @id @default(autoincrement())
  fechaCreacion         DateTime              @default(now())
  estado               String
  rut                  String                @unique
  razonSocial          String
  nombreCliente        String
  pais                 String
  region               String
  ciudad               String
  comuna               String
  direccion            String
  telefono             String?
  sitioWeb             String?
  segmento             String?
  industria            String?
  contactos            Contacto[]
  condicionesComerciales CondicionComercial?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model Contacto {
  id        Int      @id @default(autoincrement())
  nombre    String
  cargo     String
  email     String
  telefono1 String
  telefono2 String?
  clienteId Int
  cliente   Cliente  @relation(fields: [clienteId], references: [id])
}

model CondicionComercial {
  id              Int      @id @default(autoincrement())
  vendedor        String
  condicionVenta  String
  observaciones   String?
  clienteId       Int      @unique
  cliente         Cliente  @relation(fields: [clienteId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
} 
